version: '3.9'
services:
  php-fpm:
    build:
      dockerfile: docker/backend/php-fpm/Dockerfile
      args:
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
    env_file:
      - ./.env
    volumes:
      - ./app:/app
    depends_on:
      - redis
      - mysql
      - rabbitmq
    networks:
      - symfony
    environment:
      #XDEBUG_CONFIG: "remote_host=192.168.220.1 remote_enable=1 remote_autostart=off  remote_port=9003"
      PHP_IDE_CONFIG: serverName=docker
      HOME: /app
  rabbitmq:
      image: rabbitmq:3.10.7-management
      ports:
        # AMQP protocol port
        - '5672:5672'
        # HTTP management UI
        - '15672:15672'
      container_name: rabbitmq
      restart: unless-stopped
      environment:
        RABBITMQ_DEFAULT_VHOST: 'messages'
        RABBITMQ_DEFAULT_USER: 'user'
        RABBITMQ_DEFAULT_PASS: 'password'
      networks:
        - symfony
  frontend:
    image: node:18-alpine
    user: "node"
    working_dir: /app
    environment:
      - NODE_ENV=production
    volumes:
      - ./app:/app
    command: "npm start"
    networks:
      - symfony
  php-cli:
    build:
      context: docker/
      dockerfile: backend/php-cli/Dockerfile
    env_file:
      - ./.env
    volumes:
      - ./app:/app
    depends_on:
      - redis
      - mysql
    networks:
      - symfony
  app:
    build:
      dockerfile: docker/backend/nginx/Dockerfile
    volumes:
      - ./app:/app
    depends_on:
      - php-fpm
      - mysql
      - redis
      - puppetter
      - rabbitmq
    ports:
      - "80:80"
    networks:
      - symfony
  job-queue:
    build:
      dockerfile: docker/backend/php-consume/Dockerfile
    volumes:
      - ./app:/app:rwx
    env_file:
      - ./.env
    deploy:
      restart_policy:
        condition: on-failure
    command: php /app/bin/console messenger:consume messages
    networks:
      - symfony
  redis:
    build:
      dockerfile: docker/redis/Dockerfile
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - /docker/redis:/usr/local/etc/redis
    networks:
      - symfony
  mysql:
    image: mysql:5.7
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    restart: always
    ports:
      - '3306:3306'
    volumes:
      - /docker/backend/mysql:/var/lib/mysql
    networks:
      - symfony
  puppetter:
    build:
      dockerfile: docker/backend/puppetter/Dockerfile
    volumes:
      - ./puppetter:/puppetter
    ports:
      - "3000:3000"
    networks:
      - symfony
    restart: always

networks:
  symfony:

