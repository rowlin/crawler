# @name="puppetter"
GET http://localhost:3000/


###
# @params site="required"
# @params script="Ð°"
#
#
# @name="POST request"
POST http://localhost:3000/scrape
Connection: keep-alive
Accept: text/html
Content-Type: text/html; charset=UTF-8
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9,es;q=0.8

(async () => {
  const browser = await puppeteer.launch(
{
args: ['--no-sandbox', '--disable-setuid-sandbox'],
ignoreHTTPSErrors: true
}
);
const page = await browser.newPage();
await page.setViewport({
width: 1240,
height: 800,
deviceScaleFactor: 1,
});

await page.goto('https://cv.ee/ru/search?limit=20&offset=0&categories%5B0%5D=INFORMATION_TECHNOLOGY&towns%5B0%5D=312&keywords%5B0%5D=php&fuzzy=true&suitableForRefugees=false&isHourlySalary=false&isRemoteWork=false&isQuickApply=false&languages%5B0%5D=ru');
await page.waitForSelector('.vacancies-list');

let data = await page.$$eval('.vacancies-list__item', (links ) => {
var res = [];
var i = 0;
links.forEach( (l, i )=> {
return res[i++] =   {
'url':  l.querySelector('a').href,
'text':  [].map.call(l.querySelectorAll('span') , function(obj){
return obj.innerText;
}),
}
}
)
return res;

});
await page.screenshot({ path: 'example2.png' });
return data;
await browser.close();
})();


###


